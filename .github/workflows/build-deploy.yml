name: Build and Deploy Code

on: 
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]

jobs:
  test:
    environment:
      name: Testing
    env:
      DATABASE_HOSTNAME: localhost
      DATABASE_PORT: 5434
      DATABASE_PASSWORD: ${{ secrets.TEST_DB_PASSWORD }}
      DATABASE_NAME: ${{ secrets.TEST_DB_NAME }}
      DATABASE_USERNAME: ${{ secrets.TEST_DB_USER }}
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      ALGORITHM: HS256
      ACCESS_TOKEN_EXPIRE_MINUTES: 30
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Create env file
        run: |
          cat << EOF > .env.test
          DB_USER=${{ secrets.TEST_DB_USER }}
          DB_PASSWORD=${{ secrets.TEST_DB_PASSWORD }}
          DB_NAME=${{ secrets.TEST_DB_NAME }}
          EOF

      - name: Create docker-compose.test.yml
        run: |
          cat << EOF > docker-compose.test.yml
          services:
            test_db:
              image: postgres:15
              ports:
                - "5434:5432"
              env_file:
                - .env.test   
              environment:
                - POSTGRES_USER=${{ secrets.TEST_DB_USER }}
                - POSTGRES_PASSWORD=${{ secrets.TEST_DB_PASSWORD }}
                - POSTGRES_DB=${{ secrets.TEST_DB_NAME }}_test
              healthcheck:
                test: ["CMD-SHELL", "pg_isready -U postgres"]
                interval: 5s
                timeout: 5s
                retries: 5
          EOF

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Start test database
        run: docker compose -f docker-compose.test.yml up -d

      - name: Wait for database
        run: sleep 5

      - name: Run tests
        run: pytest -v

      - name: Cleanup
        if: always()
        run: docker compose -f docker-compose.test.yml down -v